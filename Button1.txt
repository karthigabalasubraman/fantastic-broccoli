Shutdown/reboot(/power on) Raspberry Pi with pushbutton
Usage:
Connect pushbutton to GPIO pin 5 and ground then run:
sudo python pishutdown.py

When button is pressed for less than 3 seconds, Pi reboots. 
If pressed for more than 3 seconds it shuts down.
While shut down, if button is connected to GPIO pin 5,
then pressing the button powers on Pi.

# shutdown/reboot(/power on) Raspberry Pi with pushbutton  
   
 import RPi.GPIO as GPIO  
 from subprocess import call  
 from datetime import datetime  
  
 # pushbutton connected to this GPIO pin, using pin 5 also has the benefit of  
 # waking / powering up Raspberry Pi when button is pressed  
 shutdownPin = 2  
   
 # if button pressed for at least this long then reboot. if less then shut down.  
 rebootMinSeconds = 3  
   
 GPIO.setmode(GPIO.BOARD)  
 GPIO.setup(shutdownPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)  
   
 buttonPressedTime = None  
   
   
 def buttonStateChanged(pin):  
    global buttonPressedTime  
  
    if not (GPIO.input(pin)):  
        # button is down  
        buttonPressedTime = datetime.now()  
    else:  
        # button is up  
        if buttonPressedTime is not None:  
            if (datetime.now() - buttonPressedTime).total_seconds() >= rebootMinSeconds:  
                # button pressed for more than specified time, reboot  
               call(['shutdown', '-r', 'now'], shell=False)  
            else:  
                # button pressed for a shorter time, halt  
                call(['shutdown', '-h', 'now'], shell=False)  
   
 
 # subscribe to button presses  
def main():
 GPIO.add_event_detect(shutdownPin, GPIO.BOTH, callback=buttonStateChanged)  
   
  while True:  
     pass  
 main() 


https://gilyes.com/pi-shutdown-button/